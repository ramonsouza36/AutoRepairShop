@page "/permissaoadd"
@page "/permissaoadd/{id:guid}"
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@using Microsoft.AspNetCore.Identity;
@using System;
@using System.Text;
@using System.Security.Cryptography;
@using AutoRepairShop.Components.Services;
@inject NavigationManager navManager;
@inject RoleService roleService;
@rendermode InteractiveServer

<PageTitle>Roles</PageTitle>

<div class="container-fluid">
    <h3>Permissão</h3>
</div>
<div>
    <a class="btn btn-secondary" href="permissoes"> 
        <i class="fas fa-arrow-left text-center justify-content-center mt-1"> Voltar</i>
    </a>
    <button class="btn btn-primary active text-center">
        <i class="fas fa-save text-center justify-content-center mt-1" @onclick = "(() => SetRole())"> Salvar</i>
    </button>
</div>
<div class="container-fluid">
    <div class="row col-md-12 d-md-inline-flex mt-5">
        <div class="col-md-3">
            <label class="label">Nome da Permissão</label>
            <input class="form-control border-secondary col-md-3" type="text" placeholder="Nome Permissão" @bind-value="@role.Name"/>
        </div>
    </div>
</div>
@code{

  [Parameter]
  public Guid? id { get; set; }
  public IdentityRole? role { get; set; }

  protected override async Task OnParametersSetAsync()
  {
      if(id is null)
        role = new IdentityRole();
      else
        role = roleService.GetById(id.Value);
      await Task.CompletedTask;
  }

  private async Task SetRole()
  {
    await roleService.Add(role!);
  }
}