@using AutoRepairShop.Components.Pages.Modals
@using System.Globalization
@using Microsoft.AspNetCore.Identity
@inject UserManager<IdentityUser> userManager;
<!-- Modal -->
<div class="modal @ModalClass" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="display:@ModalDisplay">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Alterar Senha</h5>
        <button type="button" class="btn-close" title="Fechar" data-bs-dismiss="modal" @onclick = "(() => Close())" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="col-md-12 mt-5">
            <div>
                <label class="label">Senha</label>
                <div class="input-group align-items-center">
                    <input type="@Type" class="form-control border-secondary"  @bind-value = "@Password" placeholder="Senha"/>
                    <button class="btn btn-secondary text-white" @onclick="(() => changeType())"><i class="@Class"></i></button>
                </div>        
            </div>
            <div class="mt-3">
                <label class="label">Confirmar senha</label>
                <div class="input-group align-items-center">
                    <input class="form-control border-secondary" type="@TypeConfirmation" placeholder="Confirmar senha" @bind-value="@PasswordConfirmation"/>
                    <button class="btn btn-secondary text-white" @onclick="(() => changeTypeConfirmation())"><i class="@ClassConfirmation"></i></button>
                </div>
            </div>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" title="Fechar" @onclick = "(() => Close())" data-bs-dismiss="modal">Fechar</button>
        <button type="button" class="btn btn-primary" title="Confirmar" @onclick = "(() => PasswordChange())">Confirmar</button>
      </div>
    </div>
  </div>
</div>


@code{

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;
    public string Password = "";
    public string PasswordConfirmation = "";
    public string Type = "password";
    public string TypeConfirmation = "password";
    public string Class = "fas fa-eye";
    public string ClassConfirmation = "fas fa-eye";

    [Parameter]
    public string? UserId { get; set; }
    public void Open(string id)
    {
        this.UserId = id;
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }

    private void changeType()
  {
    if(Type == "password")
    {
        Type = "text";
        Class = "fas fa-eye";
    }
    else
    {
        Type = "password";
        Class = "fas fa-eye-slash";
    }
  }

  private void changeTypeConfirmation()
  {
    if(TypeConfirmation == "password")
    {
        TypeConfirmation = "text";
        ClassConfirmation = "fas fa-eye-slash";
    }
    else
    {
        TypeConfirmation = "password";
        ClassConfirmation = "fas fa-eye";
    }
  }

  private async Task PasswordChange()
  {
    var user = await userManager.FindByIdAsync(UserId!);
    await userManager.RemovePasswordAsync(user!);
    await userManager.AddPasswordAsync(user!, Password);
    Close();
  }
}    
