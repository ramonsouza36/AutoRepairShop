@using AutoRepairShop.Components.Pages.Modals
<!-- Modal -->
<div class="modal @ModalClass" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true" style="display:@ModalDisplay">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="exampleModalLabel">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <div class="row col-md-12 d-md-inline-flex">
            @if(Products is not null)
            {
              foreach(var product in Products)
              {
                
                <label class="align-middle me-1 col-md-6">@product.ProductName</label>
                <label class="align-middle me-1 col-md-3">@product.QuantityUsed</label>
                <label class="align-middle me-1 col-md-2" data-format="##,##" >R$@product.TotalValue</label>
              }
            }
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" @onclick = "(() => Close())" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>


@code{

    public string ModalDisplay = "none;";
    public string ModalClass = "";
    public bool ShowBackdrop = false;

    [Parameter]
    public List<ProductsUsed>? Products { get; set; }
    public void Open()
    {
        ModalDisplay = "block;";
        ModalClass = "Show";
        ShowBackdrop = true;
        StateHasChanged();
    }

    public void Close()
    {
        ModalDisplay = "none";
        ModalClass = "";
        ShowBackdrop = false;
        StateHasChanged();
    }
}