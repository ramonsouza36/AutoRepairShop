@page "/servicesorderadd"
@page "/servicesorderadd/{id:guid}"
@using System.Linq;
@using Microsoft.EntityFrameworkCore;
@using AutoRepairShop.DAL.Models;
@using AutoRepairShop.Components.Services;
@using System.Text.Json
@inject ServiceOrderService serviceOrderService
@inject VehicleService vehicleService
@inject ProductService productService
@inject NavigationManager navManager;
@rendermode InteractiveServer

<PageTitle>Cadastro de Ordem de Serviço</PageTitle>

<h3>Cadastro de Ordem de Serviço</h3>

<div class="row col-md-12 d-md-inline-flex">
  <div class="col-md-6">
    <a class="btn btn-secondary" href="ordemservico">
        <i class="fas fa-arrow-left text-center justify-content-center mt-1"> Voltar</i>
    </a>
    <button class="btn btn-primary active text-center">
        <i class="fas fa-save text-center justify-content-center mt-1" @onclick = "(() => AddServiceOrder())"> Salvar</i>
    </button>
  </div>
  <div class="col-md-6 d-flex justify-content-end">
    <label class="text-end fs-3">Número: @OrderNumber</label>
  </div>
</div>

<div class="border border-2 border-dark mt-5">
  <div class="m-5">
    <label for="email" class="form-label">Descrição:</label>
    <input type="text" class="form-control" id="nome" placeholder="Nome" name="nome" @bind-value="@serviceOrder!.Description">
  </div>
  <div class="m-5">
    <label for="pwd" class="form-label">Veículo:</label>
    <select @bind="serviceOrder.VehicleId"class="form-select" id="inputGroupSelect01">
      @if(serviceOrder.VehicleId == Guid.Empty)
      {
        <option value=@Guid.Empty selected>Selecione o veículo...</option>
      }
      @if(vehicles is not null)
      {
          foreach(var vehicle in vehicles)
          {
            <option value=@vehicle.Id>@vehicle.Model - @vehicle.Plate</option>
          }
      }
    </select>
  </div>
  <div class="m-5">
    <label for="pwd" class="form-label">Produtos:</label>
    <div class="input-group">
      <select @bind="productUsed!.ProductName"class="form-select">
        @if(string.IsNullOrEmpty(productUsed!.ProductName))
        {
          <option value=@string.Empty selected>Selecione o veículo...</option>
        }
        @if(productUsed is not null)
        {
            foreach(var product in products!)
            {
              <option value=@product.Name>@product.Name</option>
            }
        } else
        {
          <option value="" selected>Selecione o produto...</option>
        }
      </select>
        <button class="btn btn-outline-primary" type="button" id="button-addon2" @onclick = "(() => AddProductUsed())">Adicionar</button>
    </div>
  </div>
  <div class="accordion m-5" id="accordionExample">
    <div class="accordion-item">
      <h2 class="accordion-header" id="headingOne">
        <button class="accordion-button bg-primary text-white" type="button" data-bs-toggle="collapse" @onclick = "(() => ShowCollapse())" data-bs-target="#collapseOne" aria-expanded="true" aria-controls="collapseOne">
          Produtos Usados
        </button>
      </h2>
      <div id="collapseOne" class="accordion-collapse @collapse" aria-labelledby="headingOne" data-bs-parent="#accordionExample">
        <div class="accordion-body">
          <ul class="list-group ">
            @if(productsUsed!.Count != 0)
            {
              foreach(var product in productsUsed)
              {
                <li class="list-group-item">
                  <div class="row col-md-12 d-md-inline-flex">
                    <div class="col-md-6">
                      <label class="align-middle mt-1">
                          @product.ProductName
                        </label>
                    </div>
                    <div class="col-md-6">
                      <input class="form-control me-1 align-middle" type="number" @bind-value="@product.QuantityUsed">
                    </div>
                  </div>
                </li> 
              }
            }
          </ul>
        </div>
      </div>
    </div>
  </div>
  <div class="m-5 overflow-auto">
    
  </div>
  <div class="form-check m-5">
    <input class="form-check-input" type="checkbox" id="flexCheckDefault" checked="@serviceOrder.Authorized" @bind-value="@serviceOrder.Authorized">
    <label class="form-check-label" for="flexCheckDefault">
      Autorizado
    </label>
  </div>
</div>

@code{

  [Parameter]
  public Guid? id { get; set; }

  public ServiceOrder? serviceOrder { get; set; }

  public List<Vehicle>? vehicles { get; set; }

  public List<Product>? products { get; set; }
  
  public ProductsUsed? productUsed { get; set; }

  public List<ProductsUsed>? productsUsed { get; set; }

  public string collapse = "collapse";


  public long OrderNumber = 0;

  protected override async Task OnParametersSetAsync()
  {
      if(id is null)
      {
        serviceOrder = new ServiceOrder();
        serviceOrder.VehicleId = Guid.Empty;
      }
      else
        serviceOrder = serviceOrderService.GetById(id.Value);
      
      vehicles = vehicleService.GetAll().ToList();
      products = productService.GetAll().ToList();
      OrderNumber =  serviceOrder.OrderNumber > 0 ? serviceOrder.OrderNumber : serviceOrderService.GetMaxOrderNumber() + 1;
      productsUsed = new List<ProductsUsed>();
      if(!string.IsNullOrEmpty(serviceOrder.ProductsUsed))
      {
        productsUsed = JsonSerializer.Deserialize<List<ProductsUsed>>(serviceOrder.ProductsUsed);
      }
      productUsed = new ProductsUsed();
      await Task.CompletedTask;
  }

  public async Task AddServiceOrder()
  {
    serviceOrder!.OrderNumber = OrderNumber;
    
    var options = new JsonSerializerOptions { WriteIndented = true };
    foreach(var prod in productsUsed!)
    {
      var product = products!.FirstOrDefault(x => x.Name == prod.ProductName);
      prod.TotalValue = prod.QuantityUsed * product!.Value; 
    }
    string jsonString = JsonSerializer.Serialize<List<ProductsUsed>>(productsUsed,options);
    serviceOrder!.ProductsUsed = jsonString;

    if(id is null)
      await serviceOrderService!.Add(serviceOrder!);
    else
      serviceOrderService!.Update(serviceOrder!);

    navManager.NavigateTo($"/ordemservico");
  }

  public void ShowCollapse()
  {
      if(collapse == "collapse")
        collapse = "collapse show";
      else
        collapse = "collapse";
  }

  public void AddProductUsed()
  {
    if(productUsed is not null || !string.IsNullOrEmpty(productUsed!.ProductName))
      productsUsed!.Add(productUsed!);
  }
}